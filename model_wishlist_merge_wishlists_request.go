/*
wishlist/service.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package wishlist

import (
	"encoding/json"
)

// checks if the WishlistMergeWishlistsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WishlistMergeWishlistsRequest{}

// WishlistMergeWishlistsRequest struct for WishlistMergeWishlistsRequest
type WishlistMergeWishlistsRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	StartingWishlistId *string `json:"startingWishlistId,omitempty"`
	// If the customer GRN is set on JWT, it will be used as default. Otherwise, it will be used the customer_grn field.
	CustomerGrn *string `json:"customerGrn,omitempty"`
	// The wishlist to merge into the starting wishlist.
	TargetWishlistId *string `json:"targetWishlistId,omitempty"`
}

// NewWishlistMergeWishlistsRequest instantiates a new WishlistMergeWishlistsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWishlistMergeWishlistsRequest() *WishlistMergeWishlistsRequest {
	this := WishlistMergeWishlistsRequest{}
	return &this
}

// NewWishlistMergeWishlistsRequestWithDefaults instantiates a new WishlistMergeWishlistsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWishlistMergeWishlistsRequestWithDefaults() *WishlistMergeWishlistsRequest {
	this := WishlistMergeWishlistsRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *WishlistMergeWishlistsRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistMergeWishlistsRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *WishlistMergeWishlistsRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *WishlistMergeWishlistsRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetStartingWishlistId returns the StartingWishlistId field value if set, zero value otherwise.
func (o *WishlistMergeWishlistsRequest) GetStartingWishlistId() string {
	if o == nil || IsNil(o.StartingWishlistId) {
		var ret string
		return ret
	}
	return *o.StartingWishlistId
}

// GetStartingWishlistIdOk returns a tuple with the StartingWishlistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistMergeWishlistsRequest) GetStartingWishlistIdOk() (*string, bool) {
	if o == nil || IsNil(o.StartingWishlistId) {
		return nil, false
	}
	return o.StartingWishlistId, true
}

// HasStartingWishlistId returns a boolean if a field has been set.
func (o *WishlistMergeWishlistsRequest) HasStartingWishlistId() bool {
	if o != nil && !IsNil(o.StartingWishlistId) {
		return true
	}

	return false
}

// SetStartingWishlistId gets a reference to the given string and assigns it to the StartingWishlistId field.
func (o *WishlistMergeWishlistsRequest) SetStartingWishlistId(v string) {
	o.StartingWishlistId = &v
}

// GetCustomerGrn returns the CustomerGrn field value if set, zero value otherwise.
func (o *WishlistMergeWishlistsRequest) GetCustomerGrn() string {
	if o == nil || IsNil(o.CustomerGrn) {
		var ret string
		return ret
	}
	return *o.CustomerGrn
}

// GetCustomerGrnOk returns a tuple with the CustomerGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistMergeWishlistsRequest) GetCustomerGrnOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerGrn) {
		return nil, false
	}
	return o.CustomerGrn, true
}

// HasCustomerGrn returns a boolean if a field has been set.
func (o *WishlistMergeWishlistsRequest) HasCustomerGrn() bool {
	if o != nil && !IsNil(o.CustomerGrn) {
		return true
	}

	return false
}

// SetCustomerGrn gets a reference to the given string and assigns it to the CustomerGrn field.
func (o *WishlistMergeWishlistsRequest) SetCustomerGrn(v string) {
	o.CustomerGrn = &v
}

// GetTargetWishlistId returns the TargetWishlistId field value if set, zero value otherwise.
func (o *WishlistMergeWishlistsRequest) GetTargetWishlistId() string {
	if o == nil || IsNil(o.TargetWishlistId) {
		var ret string
		return ret
	}
	return *o.TargetWishlistId
}

// GetTargetWishlistIdOk returns a tuple with the TargetWishlistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistMergeWishlistsRequest) GetTargetWishlistIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetWishlistId) {
		return nil, false
	}
	return o.TargetWishlistId, true
}

// HasTargetWishlistId returns a boolean if a field has been set.
func (o *WishlistMergeWishlistsRequest) HasTargetWishlistId() bool {
	if o != nil && !IsNil(o.TargetWishlistId) {
		return true
	}

	return false
}

// SetTargetWishlistId gets a reference to the given string and assigns it to the TargetWishlistId field.
func (o *WishlistMergeWishlistsRequest) SetTargetWishlistId(v string) {
	o.TargetWishlistId = &v
}

func (o WishlistMergeWishlistsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WishlistMergeWishlistsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.StartingWishlistId) {
		toSerialize["startingWishlistId"] = o.StartingWishlistId
	}
	if !IsNil(o.CustomerGrn) {
		toSerialize["customerGrn"] = o.CustomerGrn
	}
	if !IsNil(o.TargetWishlistId) {
		toSerialize["targetWishlistId"] = o.TargetWishlistId
	}
	return toSerialize, nil
}

type NullableWishlistMergeWishlistsRequest struct {
	value *WishlistMergeWishlistsRequest
	isSet bool
}

func (v NullableWishlistMergeWishlistsRequest) Get() *WishlistMergeWishlistsRequest {
	return v.value
}

func (v *NullableWishlistMergeWishlistsRequest) Set(val *WishlistMergeWishlistsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWishlistMergeWishlistsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWishlistMergeWishlistsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWishlistMergeWishlistsRequest(val *WishlistMergeWishlistsRequest) *NullableWishlistMergeWishlistsRequest {
	return &NullableWishlistMergeWishlistsRequest{value: val, isSet: true}
}

func (v NullableWishlistMergeWishlistsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWishlistMergeWishlistsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


