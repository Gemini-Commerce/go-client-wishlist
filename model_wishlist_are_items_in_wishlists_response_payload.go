/*
Wishlist Service

API for managing wishlists

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package wishlist

import (
	"encoding/json"
)

// checks if the WishlistAreItemsInWishlistsResponsePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WishlistAreItemsInWishlistsResponsePayload{}

// WishlistAreItemsInWishlistsResponsePayload struct for WishlistAreItemsInWishlistsResponsePayload
type WishlistAreItemsInWishlistsResponsePayload struct {
	WishlistGrnToWishlistItemGrnMap *map[string]string `json:"wishlistGrnToWishlistItemGrnMap,omitempty"`
}

// NewWishlistAreItemsInWishlistsResponsePayload instantiates a new WishlistAreItemsInWishlistsResponsePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWishlistAreItemsInWishlistsResponsePayload() *WishlistAreItemsInWishlistsResponsePayload {
	this := WishlistAreItemsInWishlistsResponsePayload{}
	return &this
}

// NewWishlistAreItemsInWishlistsResponsePayloadWithDefaults instantiates a new WishlistAreItemsInWishlistsResponsePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWishlistAreItemsInWishlistsResponsePayloadWithDefaults() *WishlistAreItemsInWishlistsResponsePayload {
	this := WishlistAreItemsInWishlistsResponsePayload{}
	return &this
}

// GetWishlistGrnToWishlistItemGrnMap returns the WishlistGrnToWishlistItemGrnMap field value if set, zero value otherwise.
func (o *WishlistAreItemsInWishlistsResponsePayload) GetWishlistGrnToWishlistItemGrnMap() map[string]string {
	if o == nil || IsNil(o.WishlistGrnToWishlistItemGrnMap) {
		var ret map[string]string
		return ret
	}
	return *o.WishlistGrnToWishlistItemGrnMap
}

// GetWishlistGrnToWishlistItemGrnMapOk returns a tuple with the WishlistGrnToWishlistItemGrnMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistAreItemsInWishlistsResponsePayload) GetWishlistGrnToWishlistItemGrnMapOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.WishlistGrnToWishlistItemGrnMap) {
		return nil, false
	}
	return o.WishlistGrnToWishlistItemGrnMap, true
}

// HasWishlistGrnToWishlistItemGrnMap returns a boolean if a field has been set.
func (o *WishlistAreItemsInWishlistsResponsePayload) HasWishlistGrnToWishlistItemGrnMap() bool {
	if o != nil && !IsNil(o.WishlistGrnToWishlistItemGrnMap) {
		return true
	}

	return false
}

// SetWishlistGrnToWishlistItemGrnMap gets a reference to the given map[string]string and assigns it to the WishlistGrnToWishlistItemGrnMap field.
func (o *WishlistAreItemsInWishlistsResponsePayload) SetWishlistGrnToWishlistItemGrnMap(v map[string]string) {
	o.WishlistGrnToWishlistItemGrnMap = &v
}

func (o WishlistAreItemsInWishlistsResponsePayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WishlistAreItemsInWishlistsResponsePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WishlistGrnToWishlistItemGrnMap) {
		toSerialize["wishlistGrnToWishlistItemGrnMap"] = o.WishlistGrnToWishlistItemGrnMap
	}
	return toSerialize, nil
}

type NullableWishlistAreItemsInWishlistsResponsePayload struct {
	value *WishlistAreItemsInWishlistsResponsePayload
	isSet bool
}

func (v NullableWishlistAreItemsInWishlistsResponsePayload) Get() *WishlistAreItemsInWishlistsResponsePayload {
	return v.value
}

func (v *NullableWishlistAreItemsInWishlistsResponsePayload) Set(val *WishlistAreItemsInWishlistsResponsePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableWishlistAreItemsInWishlistsResponsePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableWishlistAreItemsInWishlistsResponsePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWishlistAreItemsInWishlistsResponsePayload(val *WishlistAreItemsInWishlistsResponsePayload) *NullableWishlistAreItemsInWishlistsResponsePayload {
	return &NullableWishlistAreItemsInWishlistsResponsePayload{value: val, isSet: true}
}

func (v NullableWishlistAreItemsInWishlistsResponsePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWishlistAreItemsInWishlistsResponsePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


