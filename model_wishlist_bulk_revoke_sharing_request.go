/*
Wishlist Service

API for managing wishlists

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package wishlist

import (
	"encoding/json"
)

// checks if the WishlistBulkRevokeSharingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WishlistBulkRevokeSharingRequest{}

// WishlistBulkRevokeSharingRequest struct for WishlistBulkRevokeSharingRequest
type WishlistBulkRevokeSharingRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	SharingIds []string `json:"sharingIds,omitempty"`
}

// NewWishlistBulkRevokeSharingRequest instantiates a new WishlistBulkRevokeSharingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWishlistBulkRevokeSharingRequest() *WishlistBulkRevokeSharingRequest {
	this := WishlistBulkRevokeSharingRequest{}
	return &this
}

// NewWishlistBulkRevokeSharingRequestWithDefaults instantiates a new WishlistBulkRevokeSharingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWishlistBulkRevokeSharingRequestWithDefaults() *WishlistBulkRevokeSharingRequest {
	this := WishlistBulkRevokeSharingRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *WishlistBulkRevokeSharingRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistBulkRevokeSharingRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *WishlistBulkRevokeSharingRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *WishlistBulkRevokeSharingRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetSharingIds returns the SharingIds field value if set, zero value otherwise.
func (o *WishlistBulkRevokeSharingRequest) GetSharingIds() []string {
	if o == nil || IsNil(o.SharingIds) {
		var ret []string
		return ret
	}
	return o.SharingIds
}

// GetSharingIdsOk returns a tuple with the SharingIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistBulkRevokeSharingRequest) GetSharingIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SharingIds) {
		return nil, false
	}
	return o.SharingIds, true
}

// HasSharingIds returns a boolean if a field has been set.
func (o *WishlistBulkRevokeSharingRequest) HasSharingIds() bool {
	if o != nil && !IsNil(o.SharingIds) {
		return true
	}

	return false
}

// SetSharingIds gets a reference to the given []string and assigns it to the SharingIds field.
func (o *WishlistBulkRevokeSharingRequest) SetSharingIds(v []string) {
	o.SharingIds = v
}

func (o WishlistBulkRevokeSharingRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WishlistBulkRevokeSharingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.SharingIds) {
		toSerialize["sharingIds"] = o.SharingIds
	}
	return toSerialize, nil
}

type NullableWishlistBulkRevokeSharingRequest struct {
	value *WishlistBulkRevokeSharingRequest
	isSet bool
}

func (v NullableWishlistBulkRevokeSharingRequest) Get() *WishlistBulkRevokeSharingRequest {
	return v.value
}

func (v *NullableWishlistBulkRevokeSharingRequest) Set(val *WishlistBulkRevokeSharingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWishlistBulkRevokeSharingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWishlistBulkRevokeSharingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWishlistBulkRevokeSharingRequest(val *WishlistBulkRevokeSharingRequest) *NullableWishlistBulkRevokeSharingRequest {
	return &NullableWishlistBulkRevokeSharingRequest{value: val, isSet: true}
}

func (v NullableWishlistBulkRevokeSharingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWishlistBulkRevokeSharingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


