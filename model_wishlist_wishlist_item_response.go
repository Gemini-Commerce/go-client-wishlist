/*
Wishlist Service

API for managing wishlists

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package wishlist

import (
	"encoding/json"
	"time"
)

// checks if the WishlistWishlistItemResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WishlistWishlistItemResponse{}

// WishlistWishlistItemResponse struct for WishlistWishlistItemResponse
type WishlistWishlistItemResponse struct {
	Id *string `json:"id,omitempty"`
	Grn *string `json:"grn,omitempty"`
	WishlistId *string `json:"wishlistId,omitempty"`
	ItemGrn *string `json:"itemGrn,omitempty"`
	PreferredQuantity *string `json:"preferredQuantity,omitempty"`
	Description *WishlistLocalizedText `json:"description,omitempty"`
	AddedByCustomerGrn *string `json:"addedByCustomerGrn,omitempty"`
	AddedAt *time.Time `json:"addedAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WishlistWishlistItemResponse WishlistWishlistItemResponse

// NewWishlistWishlistItemResponse instantiates a new WishlistWishlistItemResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWishlistWishlistItemResponse() *WishlistWishlistItemResponse {
	this := WishlistWishlistItemResponse{}
	return &this
}

// NewWishlistWishlistItemResponseWithDefaults instantiates a new WishlistWishlistItemResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWishlistWishlistItemResponseWithDefaults() *WishlistWishlistItemResponse {
	this := WishlistWishlistItemResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WishlistWishlistItemResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistWishlistItemResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// &#39;Has&#39;Id returns a boolean if a field has been set.
func (o *WishlistWishlistItemResponse) &#39;Has&#39;Id() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WishlistWishlistItemResponse) SetId(v string) {
	o.Id = &v
}

// GetGrn returns the Grn field value if set, zero value otherwise.
func (o *WishlistWishlistItemResponse) GetGrn() string {
	if o == nil || IsNil(o.Grn) {
		var ret string
		return ret
	}
	return *o.Grn
}

// GetGrnOk returns a tuple with the Grn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistWishlistItemResponse) GetGrnOk() (*string, bool) {
	if o == nil || IsNil(o.Grn) {
		return nil, false
	}
	return o.Grn, true
}

// &#39;Has&#39;Grn returns a boolean if a field has been set.
func (o *WishlistWishlistItemResponse) &#39;Has&#39;Grn() bool {
	if o != nil && !IsNil(o.Grn) {
		return true
	}

	return false
}

// SetGrn gets a reference to the given string and assigns it to the Grn field.
func (o *WishlistWishlistItemResponse) SetGrn(v string) {
	o.Grn = &v
}

// GetWishlistId returns the WishlistId field value if set, zero value otherwise.
func (o *WishlistWishlistItemResponse) GetWishlistId() string {
	if o == nil || IsNil(o.WishlistId) {
		var ret string
		return ret
	}
	return *o.WishlistId
}

// GetWishlistIdOk returns a tuple with the WishlistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistWishlistItemResponse) GetWishlistIdOk() (*string, bool) {
	if o == nil || IsNil(o.WishlistId) {
		return nil, false
	}
	return o.WishlistId, true
}

// &#39;Has&#39;WishlistId returns a boolean if a field has been set.
func (o *WishlistWishlistItemResponse) &#39;Has&#39;WishlistId() bool {
	if o != nil && !IsNil(o.WishlistId) {
		return true
	}

	return false
}

// SetWishlistId gets a reference to the given string and assigns it to the WishlistId field.
func (o *WishlistWishlistItemResponse) SetWishlistId(v string) {
	o.WishlistId = &v
}

// GetItemGrn returns the ItemGrn field value if set, zero value otherwise.
func (o *WishlistWishlistItemResponse) GetItemGrn() string {
	if o == nil || IsNil(o.ItemGrn) {
		var ret string
		return ret
	}
	return *o.ItemGrn
}

// GetItemGrnOk returns a tuple with the ItemGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistWishlistItemResponse) GetItemGrnOk() (*string, bool) {
	if o == nil || IsNil(o.ItemGrn) {
		return nil, false
	}
	return o.ItemGrn, true
}

// &#39;Has&#39;ItemGrn returns a boolean if a field has been set.
func (o *WishlistWishlistItemResponse) &#39;Has&#39;ItemGrn() bool {
	if o != nil && !IsNil(o.ItemGrn) {
		return true
	}

	return false
}

// SetItemGrn gets a reference to the given string and assigns it to the ItemGrn field.
func (o *WishlistWishlistItemResponse) SetItemGrn(v string) {
	o.ItemGrn = &v
}

// GetPreferredQuantity returns the PreferredQuantity field value if set, zero value otherwise.
func (o *WishlistWishlistItemResponse) GetPreferredQuantity() string {
	if o == nil || IsNil(o.PreferredQuantity) {
		var ret string
		return ret
	}
	return *o.PreferredQuantity
}

// GetPreferredQuantityOk returns a tuple with the PreferredQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistWishlistItemResponse) GetPreferredQuantityOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredQuantity) {
		return nil, false
	}
	return o.PreferredQuantity, true
}

// &#39;Has&#39;PreferredQuantity returns a boolean if a field has been set.
func (o *WishlistWishlistItemResponse) &#39;Has&#39;PreferredQuantity() bool {
	if o != nil && !IsNil(o.PreferredQuantity) {
		return true
	}

	return false
}

// SetPreferredQuantity gets a reference to the given string and assigns it to the PreferredQuantity field.
func (o *WishlistWishlistItemResponse) SetPreferredQuantity(v string) {
	o.PreferredQuantity = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WishlistWishlistItemResponse) GetDescription() WishlistLocalizedText {
	if o == nil || IsNil(o.Description) {
		var ret WishlistLocalizedText
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistWishlistItemResponse) GetDescriptionOk() (*WishlistLocalizedText, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// &#39;Has&#39;Description returns a boolean if a field has been set.
func (o *WishlistWishlistItemResponse) &#39;Has&#39;Description() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given WishlistLocalizedText and assigns it to the Description field.
func (o *WishlistWishlistItemResponse) SetDescription(v WishlistLocalizedText) {
	o.Description = &v
}

// GetAddedByCustomerGrn returns the AddedByCustomerGrn field value if set, zero value otherwise.
func (o *WishlistWishlistItemResponse) GetAddedByCustomerGrn() string {
	if o == nil || IsNil(o.AddedByCustomerGrn) {
		var ret string
		return ret
	}
	return *o.AddedByCustomerGrn
}

// GetAddedByCustomerGrnOk returns a tuple with the AddedByCustomerGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistWishlistItemResponse) GetAddedByCustomerGrnOk() (*string, bool) {
	if o == nil || IsNil(o.AddedByCustomerGrn) {
		return nil, false
	}
	return o.AddedByCustomerGrn, true
}

// &#39;Has&#39;AddedByCustomerGrn returns a boolean if a field has been set.
func (o *WishlistWishlistItemResponse) &#39;Has&#39;AddedByCustomerGrn() bool {
	if o != nil && !IsNil(o.AddedByCustomerGrn) {
		return true
	}

	return false
}

// SetAddedByCustomerGrn gets a reference to the given string and assigns it to the AddedByCustomerGrn field.
func (o *WishlistWishlistItemResponse) SetAddedByCustomerGrn(v string) {
	o.AddedByCustomerGrn = &v
}

// GetAddedAt returns the AddedAt field value if set, zero value otherwise.
func (o *WishlistWishlistItemResponse) GetAddedAt() time.Time {
	if o == nil || IsNil(o.AddedAt) {
		var ret time.Time
		return ret
	}
	return *o.AddedAt
}

// GetAddedAtOk returns a tuple with the AddedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistWishlistItemResponse) GetAddedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AddedAt) {
		return nil, false
	}
	return o.AddedAt, true
}

// &#39;Has&#39;AddedAt returns a boolean if a field has been set.
func (o *WishlistWishlistItemResponse) &#39;Has&#39;AddedAt() bool {
	if o != nil && !IsNil(o.AddedAt) {
		return true
	}

	return false
}

// SetAddedAt gets a reference to the given time.Time and assigns it to the AddedAt field.
func (o *WishlistWishlistItemResponse) SetAddedAt(v time.Time) {
	o.AddedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *WishlistWishlistItemResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistWishlistItemResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// &#39;Has&#39;UpdatedAt returns a boolean if a field has been set.
func (o *WishlistWishlistItemResponse) &#39;Has&#39;UpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *WishlistWishlistItemResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o WishlistWishlistItemResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WishlistWishlistItemResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Grn) {
		toSerialize["grn"] = o.Grn
	}
	if !IsNil(o.WishlistId) {
		toSerialize["wishlistId"] = o.WishlistId
	}
	if !IsNil(o.ItemGrn) {
		toSerialize["itemGrn"] = o.ItemGrn
	}
	if !IsNil(o.PreferredQuantity) {
		toSerialize["preferredQuantity"] = o.PreferredQuantity
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.AddedByCustomerGrn) {
		toSerialize["addedByCustomerGrn"] = o.AddedByCustomerGrn
	}
	if !IsNil(o.AddedAt) {
		toSerialize["addedAt"] = o.AddedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WishlistWishlistItemResponse) UnmarshalJSON(data []byte) (err error) {
	varWishlistWishlistItemResponse := _WishlistWishlistItemResponse{}

	err = json.Unmarshal(data, &varWishlistWishlistItemResponse)

	if err != nil {
		return err
	}

	*o = WishlistWishlistItemResponse(varWishlistWishlistItemResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "grn")
		delete(additionalProperties, "wishlistId")
		delete(additionalProperties, "itemGrn")
		delete(additionalProperties, "preferredQuantity")
		delete(additionalProperties, "description")
		delete(additionalProperties, "addedByCustomerGrn")
		delete(additionalProperties, "addedAt")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *WishlistWishlistItemResponse) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *WishlistWishlistItemResponse) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullableWishlistWishlistItemResponse struct {
	value *WishlistWishlistItemResponse
	isSet bool
}

func (v NullableWishlistWishlistItemResponse) Get() *WishlistWishlistItemResponse {
	return v.value
}

func (v *NullableWishlistWishlistItemResponse) Set(val *WishlistWishlistItemResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWishlistWishlistItemResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWishlistWishlistItemResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWishlistWishlistItemResponse(val *WishlistWishlistItemResponse) *NullableWishlistWishlistItemResponse {
	return &NullableWishlistWishlistItemResponse{value: val, isSet: true}
}

func (v NullableWishlistWishlistItemResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWishlistWishlistItemResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


