/*
Wishlist Service

API for managing wishlists

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package wishlist

import (
	"encoding/json"
	"time"
)

// checks if the WishlistSharingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WishlistSharingResponse{}

// WishlistSharingResponse struct for WishlistSharingResponse
type WishlistSharingResponse struct {
	SharingId *string `json:"sharingId,omitempty"`
	SharingGrn *string `json:"sharingGrn,omitempty"`
	WishlistId *string `json:"wishlistId,omitempty"`
	Permission *WishlistPermission `json:"permission,omitempty"`
	CustomerGrn *string `json:"customerGrn,omitempty"`
	CustomerAggregationId *string `json:"customerAggregationId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewWishlistSharingResponse instantiates a new WishlistSharingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWishlistSharingResponse() *WishlistSharingResponse {
	this := WishlistSharingResponse{}
	var permission WishlistPermission = WISHLISTPERMISSION_UNKNOWN_PERMISSION
	this.Permission = &permission
	return &this
}

// NewWishlistSharingResponseWithDefaults instantiates a new WishlistSharingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWishlistSharingResponseWithDefaults() *WishlistSharingResponse {
	this := WishlistSharingResponse{}
	var permission WishlistPermission = WISHLISTPERMISSION_UNKNOWN_PERMISSION
	this.Permission = &permission
	return &this
}

// GetSharingId returns the SharingId field value if set, zero value otherwise.
func (o *WishlistSharingResponse) GetSharingId() string {
	if o == nil || IsNil(o.SharingId) {
		var ret string
		return ret
	}
	return *o.SharingId
}

// GetSharingIdOk returns a tuple with the SharingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistSharingResponse) GetSharingIdOk() (*string, bool) {
	if o == nil || IsNil(o.SharingId) {
		return nil, false
	}
	return o.SharingId, true
}

// HasSharingId returns a boolean if a field has been set.
func (o *WishlistSharingResponse) HasSharingId() bool {
	if o != nil && !IsNil(o.SharingId) {
		return true
	}

	return false
}

// SetSharingId gets a reference to the given string and assigns it to the SharingId field.
func (o *WishlistSharingResponse) SetSharingId(v string) {
	o.SharingId = &v
}

// GetSharingGrn returns the SharingGrn field value if set, zero value otherwise.
func (o *WishlistSharingResponse) GetSharingGrn() string {
	if o == nil || IsNil(o.SharingGrn) {
		var ret string
		return ret
	}
	return *o.SharingGrn
}

// GetSharingGrnOk returns a tuple with the SharingGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistSharingResponse) GetSharingGrnOk() (*string, bool) {
	if o == nil || IsNil(o.SharingGrn) {
		return nil, false
	}
	return o.SharingGrn, true
}

// HasSharingGrn returns a boolean if a field has been set.
func (o *WishlistSharingResponse) HasSharingGrn() bool {
	if o != nil && !IsNil(o.SharingGrn) {
		return true
	}

	return false
}

// SetSharingGrn gets a reference to the given string and assigns it to the SharingGrn field.
func (o *WishlistSharingResponse) SetSharingGrn(v string) {
	o.SharingGrn = &v
}

// GetWishlistId returns the WishlistId field value if set, zero value otherwise.
func (o *WishlistSharingResponse) GetWishlistId() string {
	if o == nil || IsNil(o.WishlistId) {
		var ret string
		return ret
	}
	return *o.WishlistId
}

// GetWishlistIdOk returns a tuple with the WishlistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistSharingResponse) GetWishlistIdOk() (*string, bool) {
	if o == nil || IsNil(o.WishlistId) {
		return nil, false
	}
	return o.WishlistId, true
}

// HasWishlistId returns a boolean if a field has been set.
func (o *WishlistSharingResponse) HasWishlistId() bool {
	if o != nil && !IsNil(o.WishlistId) {
		return true
	}

	return false
}

// SetWishlistId gets a reference to the given string and assigns it to the WishlistId field.
func (o *WishlistSharingResponse) SetWishlistId(v string) {
	o.WishlistId = &v
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *WishlistSharingResponse) GetPermission() WishlistPermission {
	if o == nil || IsNil(o.Permission) {
		var ret WishlistPermission
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistSharingResponse) GetPermissionOk() (*WishlistPermission, bool) {
	if o == nil || IsNil(o.Permission) {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *WishlistSharingResponse) HasPermission() bool {
	if o != nil && !IsNil(o.Permission) {
		return true
	}

	return false
}

// SetPermission gets a reference to the given WishlistPermission and assigns it to the Permission field.
func (o *WishlistSharingResponse) SetPermission(v WishlistPermission) {
	o.Permission = &v
}

// GetCustomerGrn returns the CustomerGrn field value if set, zero value otherwise.
func (o *WishlistSharingResponse) GetCustomerGrn() string {
	if o == nil || IsNil(o.CustomerGrn) {
		var ret string
		return ret
	}
	return *o.CustomerGrn
}

// GetCustomerGrnOk returns a tuple with the CustomerGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistSharingResponse) GetCustomerGrnOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerGrn) {
		return nil, false
	}
	return o.CustomerGrn, true
}

// HasCustomerGrn returns a boolean if a field has been set.
func (o *WishlistSharingResponse) HasCustomerGrn() bool {
	if o != nil && !IsNil(o.CustomerGrn) {
		return true
	}

	return false
}

// SetCustomerGrn gets a reference to the given string and assigns it to the CustomerGrn field.
func (o *WishlistSharingResponse) SetCustomerGrn(v string) {
	o.CustomerGrn = &v
}

// GetCustomerAggregationId returns the CustomerAggregationId field value if set, zero value otherwise.
func (o *WishlistSharingResponse) GetCustomerAggregationId() string {
	if o == nil || IsNil(o.CustomerAggregationId) {
		var ret string
		return ret
	}
	return *o.CustomerAggregationId
}

// GetCustomerAggregationIdOk returns a tuple with the CustomerAggregationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistSharingResponse) GetCustomerAggregationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerAggregationId) {
		return nil, false
	}
	return o.CustomerAggregationId, true
}

// HasCustomerAggregationId returns a boolean if a field has been set.
func (o *WishlistSharingResponse) HasCustomerAggregationId() bool {
	if o != nil && !IsNil(o.CustomerAggregationId) {
		return true
	}

	return false
}

// SetCustomerAggregationId gets a reference to the given string and assigns it to the CustomerAggregationId field.
func (o *WishlistSharingResponse) SetCustomerAggregationId(v string) {
	o.CustomerAggregationId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *WishlistSharingResponse) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistSharingResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *WishlistSharingResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *WishlistSharingResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *WishlistSharingResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WishlistSharingResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *WishlistSharingResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *WishlistSharingResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o WishlistSharingResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WishlistSharingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SharingId) {
		toSerialize["sharingId"] = o.SharingId
	}
	if !IsNil(o.SharingGrn) {
		toSerialize["sharingGrn"] = o.SharingGrn
	}
	if !IsNil(o.WishlistId) {
		toSerialize["wishlistId"] = o.WishlistId
	}
	if !IsNil(o.Permission) {
		toSerialize["permission"] = o.Permission
	}
	if !IsNil(o.CustomerGrn) {
		toSerialize["customerGrn"] = o.CustomerGrn
	}
	if !IsNil(o.CustomerAggregationId) {
		toSerialize["customerAggregationId"] = o.CustomerAggregationId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableWishlistSharingResponse struct {
	value *WishlistSharingResponse
	isSet bool
}

func (v NullableWishlistSharingResponse) Get() *WishlistSharingResponse {
	return v.value
}

func (v *NullableWishlistSharingResponse) Set(val *WishlistSharingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWishlistSharingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWishlistSharingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWishlistSharingResponse(val *WishlistSharingResponse) *NullableWishlistSharingResponse {
	return &NullableWishlistSharingResponse{value: val, isSet: true}
}

func (v NullableWishlistSharingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWishlistSharingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


